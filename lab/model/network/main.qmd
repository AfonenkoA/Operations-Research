# Сетевые модели {#sec-lab-model-network}

## Задачи

:::: {#exr-lab-model-network-mr-umnik}
### Надёжный маршрут

М-р Умник ездит на работу на автомобиле. Закончив в своё время полный курс исследования операций, он легко определил самый короткий путь от дома до работы. К сожалению на данном маршруте находится достаточно много камер, и Умнику часто приходят штрафы за превышение скорости (как ему кажется, необоснованно). Таким образом самый короткий путь оказался не самым лучшим. Схема сети дорог, по которой м-р Умник может добраться от дома до работы, приведена ниже. На этой схеме приведены вероятности **попасться** в объектив камеры. Требуется определить такой маршрут, вероятность **проскочить** на котором будет максимальной. (Подсказка: удобней складывать логарифмы вероятностей, чем перемножать исходные значения) <!--Таха c c245 задача 6.3.2-->

```{r}
#| echo: false

dshow('city.dot')
```

::: {.callout-note appearance="minimal"}
Уровень 1
:::
::::

::::::::: {#exr-lab-model-network-coffie-break}
### Cуета

Схема переходов между учебными корпусами изображена на рисунке. Расстояние между ними изображены на рёбрах. (Параметр `E(g)$weight`)

```{r}
#| echo: false
#| fig-align: center

g <- igraph::read_graph('buildings.graphml', format = 'GraphML')
plot(g, edge.label = igraph::E(g)$weight)
```

:::: {.content-visible when-format="html"}
::: {.callout appearance="minimal"}
⤓ [buildings.graphml](buildings.graphml)
:::
::::

:::: {.content-visible unless-format="html"}
::: {.callout appearance="minimal"}
`\faFile*[regular].`{=latex} [buildings.graphml](lab/model/network/buildings.graphml)
:::
::::

Во время перерыва студенты переходят между корпусами на дальнейшие занятия. В таблице указано сколько человек направляется из корпуса $i$ в корпус $j$ на следующую пару. Студент выбирает свой путь рационально (наименьшее расстояние).

```{r}
#| echo: false

Pd <- read.table('transition.txt')
P <- as.matrix(Pd)
colnames(Pd) <- rownames(Pd) <- seq_along(Pd)
knitr::kable(Pd, row.names = TRUE)
```

Постройте граф транспортных потоков (вес ребра -- число человек, которые идут между корпусами) и определите, где выгоднее всего установить кофейню.

```{r}
#| include: false
#| fig-align: center

v <- igraph::V(g)
D <- purrr::map(v, \(f) igraph::shortest_paths(g, from = f, to = v)$vpath)
igraph::E(g)$weight <- 1
vs <- seq_along(v)
for(i in vs)
  for(j in vs)
  {
    p <- D[[i]][[j]]
    igraph::E(g, path = p)$weight <- igraph::E(g, path = p)$weight + 
                                     P[cbind(head(p,-1), tail(p,-1))]
  }
plot(g, edge.label = igraph::E(g)$weight)
```

<!--https://web.mit.edu/urban_or_book/www/book/chapter6/6.2.3.html-->

::: {.callout-note appearance="minimal"}
Уровень 2
:::

::: callout-tip
1.  Матрицу можно индексировать матрицей (полезно при работе с путями).
2.  Обратите внимание на параметр `path` в функции получению рёбер графа `E(g, path = )`
3.  Используйте функцию `{r} igraph::shortest_paths() |> dl()`
:::
:::::::::

:::: {#exr-lab-model-network-division}
### Соображая на троих

Собираясь на тусовку три товарища с ФСК собрали все деньги, которые у них были (10,40,10) рублей соответственно. На следующее утро возник нетривиальный вопрос о должниках. Считая, что все должны были вложиться поровну определите, кто, кому и сколько должен передать.

```{r}
#| echo: false
#| fig-align: center

g <- igraph::make_full_graph(3,directed = TRUE)
igraph::V(g)$label <- 1:3
igraph::E(g)$capacity <- Inf
plot(g, edge.curved=0.3)
```

Данную задачу можно сформулировать как задачу поиска максимального потока в сети, если ввести два фиктивных узла: исток (который распределяет всем поровну) и сток (который показывает сколько кто потратил) и тем самым ограничить вместимость (`capacity`) денежных потоков.

```{r}
#| fig-align: center
#| echo: false

g <- g |> 
  igraph::add_vertices(1, label = 'soruce') |>
  igraph::add_vertices(1, label = 'drain') |> 
  igraph::add_edges(rbind(4,1:3),capacity = rep(20,3)) |>
  igraph::add_edges(rbind(1:3,5),capacity = c(10,40,10)) 

x <- igraph::E(g)$capacity
x[x==Inf] <- '' 
plot(g, edge.label = x, edge.curved=0.3)
```

```{r}
#| include: false

plot(g |> igraph::delete_vertices(c(4,5)), edge.label = igraph::max_flow(g, 4, 5)$flow, edge.curved=0.3)
```

<!-- <https://hackernoon.com/max-flow-algorithm-in-real-life-551ebd781b25> -->

<!-- <https://r-graph-gallery.com/248-igraph-plotting-parameters.html> -->

::: {.callout-note appearance="minimal"}
Уровень 2
:::
::::

::::: {#exr-lab-model-development}
### Построить в срок

В следующей таблице вприведены работы (процессы), выполняемые при строительстве нового спорткомплекаса в Роще. Разработайте сеть выполнения этих работ. Найдите критический путь в этой сети.

+--------------------------------------------+----------------+--------------+
| Процесс                                    | Предшествующий | Длительность |
|                                            |                |              |
|                                            | процесс        | (дни)        |
+============================================+:==============:+:============:+
| *A*: Очистка строительного участка         | —              | 1            |
+--------------------------------------------+----------------+--------------+
| *B*: Завоз оборудования                    | —              | 2            |
+--------------------------------------------+----------------+--------------+
| *C*: Земляные работы                       | *A*            | 1            |
+--------------------------------------------+----------------+--------------+
| *D*: Заливка фундамента                    | *C*            | 2            |
+--------------------------------------------+----------------+--------------+
| *E*: Наружные сантехнические работы        | *B,C*          | 6            |
+--------------------------------------------+----------------+--------------+
| *F*: Возведение каркаса дома               | *D*            | 10           |
+--------------------------------------------+----------------+--------------+
| *G*: Прокладка электропроводки             | *F*            | 3            |
+--------------------------------------------+----------------+--------------+
| *H*: Создание перекрытий                   | *G*            | 1            |
+--------------------------------------------+----------------+--------------+
| *I*: Создание каркаса крыши                | *F*            | 1            |
+--------------------------------------------+----------------+--------------+
| *J*: Внутренние сантехнические работы      | *E, H*         | 5            |
+--------------------------------------------+----------------+--------------+
| *K*: Покрытие крыши                        | *I*            | 2            |
+--------------------------------------------+----------------+--------------+
| *L*: Наружные изоляционные работы          | *F, J*         | 1            |
+--------------------------------------------+----------------+--------------+
| *M*: Вставка окон и наружных дверей        | *F*            | 2            |
+--------------------------------------------+----------------+--------------+
| *N*: Обкладка комплекса кирпичом           | *L, M*         | 4            |
+--------------------------------------------+----------------+--------------+
| *O*: Штукатурка стен и потолков            | *G, J*         | 2            |
+--------------------------------------------+----------------+--------------+
| *P*: Облицовка стен и потолков             | *O*            | 2            |
+--------------------------------------------+----------------+--------------+
| *Q*: Изоляция крыши                        | *I, P*         | 1            |
+--------------------------------------------+----------------+--------------+
| *R*: Окончание внутренних отделочных работ | *P*            | 7            |
+--------------------------------------------+----------------+--------------+
| *S*: Окончание наружных отделочных работ   | *I, N*         | 7            |
+--------------------------------------------+----------------+--------------+
| *T*: Ландшафтные работы                    | *S*            | 3            |
+--------------------------------------------+----------------+--------------+

::: {.callout-note appearance="minimal"}
Уровень 3
:::

::: callout-tip
Используйте пакет [`criticalpath`](https://cran.r-project.org/web/packages/criticalpath/vignettes/criticalpath-introduction.html)
:::
:::::

```{r}
#| include: false

library(criticalpath)
sch <- sch_new() |>
sch_add_activity( 1L, "a1" , 0L, 2,3,4) |>
sch_add_activity( 2L, "a2" , 4L, 5) |>
sch_add_activity( 3L, "a3" , 9L, 10) |>
sch_add_activity( 4L, "a4" , 1L, 6) |>
sch_add_activity( 5L, "a5" , 4L, 9) |>
sch_add_activity( 6L, "a6" , 5L, 7) |>
sch_add_activity( 7L, "a7" , 1L, 8,11) |>
sch_add_activity( 8L, "a8" , 7L, 12) |>
sch_add_activity( 9L, "a9" , 8L, 12) |>
sch_add_activity( 10L, "a10", 3L, 12) |>
sch_add_activity( 11L, "a11", 3L, 12) |>
sch_add_activity( 12L, "a12", 0L) |>
sch_plan()
sch_activities(sch) |> knitr::kable()
sch_duration(sch)
```
