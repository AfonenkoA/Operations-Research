# Многокритериальная оптимизация {#sec-lab-model-multi-objective}

Многокритераильная маршрутизаци

Кипятить чайник и кастрюля, многокритериальная оптимизация. Хочу сэкономить деньги, но нагреть быстрее всего. Определить фронт парето и т.д.

```{r}
loadNamespace('caRamel') |> invisible()
loadNamespace('mco') |> invisible()
loadNamespace('GPareto') |> invisible()
```

Карамель делает генетикой

Фронт паретто и область паретто

```{r}
#| warning: false
#| message: false

viennet <- function(i) {
  val1 <- 0.5*(x[i,1]*x[i,1]+x[i,2]*x[i,2])+sin(x[i,1]*x[i,1]+x[i,2]*x[i,2])
  val2 <- 15+(x[i,1]-x[i,2]+1)*(x[i,1]-x[i,2]+1)/27+(3*x[i,1]-2*x[i,2]+4)*(3*x[i,1]-2*x[i,2]+4)/8
  val3 <- 1/(x[i,1]*x[i,1]+x[i,2]*x[i,2]+1) -1.1*exp(-(x[i,1]*x[i,1]+x[i,2]*x[i,2]))
  return(c(val1,val2,val3))
}
nobj <- 3 # Number of objectives
nvar <- 2 # Number of variables
minmax <- c(FALSE, FALSE, FALSE) # All the objectives are to be minimized
bounds <- matrix(data = 1, nrow = nvar, ncol = 2) # Define the bound constraints
bounds[, 1] <- -3 * bounds[, 1]
bounds[, 2] <- 3 * bounds[, 2]

# Caramel optimization
results <- caRamel::caRamel(nobj, nvar, minmax, bounds, viennet, popsize = 100, archsize = 100,
          maxrun = 500, prec = matrix(1.e-3, nrow = 1, ncol = nobj), carallel = 0, graph = FALSE, verbose = FALSE)
caRamel::plot_caramel(results)
```

Кластерное распределение нагрузки по узлам в датацентре. Есть типы инфраструктуры, оценка производительности компьютеров (инструкций в секунду). Для каждой задачи оценка требовательности к ресурсам. При этом облако может работать в режимах IaaS, PaaS, SaaS, FaaS. Разный но фиксированный набор задач, распределение потребителей и оценка их трафика. Ограничения на вычислительную мощность, на объем сети, Требования по ресурсам от пользователей. Например функции потребляют инструкции, а инфраструктура забирает сразу узлы. Центры хранения данных могут располагаться на соседних узлах, а могут быть достаточно далеко. Изначально есть массив компьютерных датацентров, с фиксированным железом, а остальное отталкивается от него. В том числе пропускная способность сети, задержки передачи близко далеко и т.д. Отдельно сформулированы задачи и их потребители. Стоимость штрафы задержки, занятые узлы.

Целевое программирование таха. Упражнение 8.3 с 341 на тему БГУ.

Простая оптимизация возможно распределения инвестиций.

C ecr придётся вручную задавать все операции

<https://cran.r-project.org/web/packages/ecr/vignettes/multiobjective.html>

Задача с краштестом машины

Задача с конусом. Книжка про компьютерные сети
