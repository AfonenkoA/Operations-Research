# Нелинейное программирование


Для любой конкретной задачи оптимизации рекомендуется сравнить несколько доступных алгоритмов, применимых к этой задаче — в общем, часто обнаруживается, что «лучший» алгоритм сильно зависит от решаемой задачи.

Однако сравнение алгоритмов требует некоторой осторожности, поскольку не все тесты на толерантность к значению функции/параметру реализуются одинаково для разных алгоритмов.
Так, например, один и тот же дробный допуск 10−4 на значение функции может дать гораздо более точный минимум в одном алгоритме по сравнению с другим, и их сопоставление может потребовать некоторых экспериментов с допусками.

Вместо этого более справедливый и надежный способ сравнить два разных алгоритма — запустить один до тех пор, пока значение функции не сойдется к некоторому значению fA, а затем запустить второй алгоритм с тестом завершения minf_max, установленным на minf_max=fA.
То есть спросите, сколько времени потребуется двум алгоритмам, чтобы достичь одного и того же значения функции.

А еще лучше, запустите какой-нибудь алгоритм в течение очень долгого времени, пока минимальная fM не будет найдена с высокой точностью.
Затем запустите различные алгоритмы, которые вы хотите сравнить с тестом завершения: minf_max=fM+Δf.
То есть спросите, сколько времени требуется различным алгоритмам, чтобы получить минимум Δf с точностью до абсолютного допуска для некоторого Δf.
(Это полностью отличается от использования теста завершения ftol_abs, поскольку последний использует только приблизительную оценку ошибки в значениях функции, и, более того, эта оценка варьируется в зависимости от алгоритма.)
