# Лабораторная работа 1. Введение

## Пример

### Задача

Чтобы попасть из пункта А (остановка автобуса) в пункт В (лодочная станция) человек должен пройти сначала по асфальтовой дороге шириной $S$, а затем по песчаному пляжу шириной $s$. Скорость передвижения по асфальту $V$ , скорость передвижения по песку $v$. Спрашивается, в каком месте нужно свернуть с асфальтовой дороги, чтобы затратить меньше времени на путь.

### Решение

Решим задачу с конкретными значениями, в виду сложности аналитического решения (сводится к уравнению 4 степени): $D = 100$, $S = 40$, $V = 5$, $s = 60$, $v = 3$

```{r}
#| include: false

D <- 100
h_road <- 40 #S
h_sand <- 60 #s
v_sand <- 3 #v
v_road <- 5 #V
```

```{r}
#| echo: false
#| message: false
#| warning: false

library(plotly)

aval <- list()
n <- 51

x_par <- seq(1, D-1, length.out = n)

for(step in 1:n)
{
  road_x <- seq(0, x_par[step], length.out = 100);
  road_y <- h_road/x_par[step]*road_x;
  
  sand_x <- seq(x_par[step], D, length.out = 100);
  sand_y <- h_road + h_sand/(D - x_par[step])*(sand_x-x_par[step]);
  
  t <-  sqrt(step^2+h_road^2)/v_road + sqrt((D-step)^2+h_sand^2)/v_sand
  
  
  aval[[step]] <- list(visible = FALSE,
                      name = paste0('t = ', round(t,2)),
                      road_x = road_x,
                      road_y = road_y,
                      sand_x = sand_x,
                      sand_y = sand_y)
}

aval[3][[1]]$visible = TRUE

# create steps and plot all traces
steps <- list()
fig <- plot_ly()
for (i in 1:n) {
 fig <- fig |> add_lines(x = aval[[i]]$road_x,  y = aval[[i]]$road_y, visible = aval[[i]]$visible, 
                 name = aval[[i]]$name, type = 'scatter', mode = 'lines', 
                 line=list(color='00CED1'), showlegend = TRUE)
 
 fig <- fig |> add_lines(x = aval[[i]]$sand_x,  y = aval[[i]]$sand_y, visible = aval[[i]]$visible, 
                 name = aval[[i]]$name, type = 'scatter', mode = 'lines', 
                 line=list(color="red"), showlegend = FALSE)

  step <- list(args = list('visible', rep(FALSE, 2*n)), method = 'restyle', label = paste0(x_par[i]))
  step$args[[2]][2*i] = step$args[[2]][2*i - 1] = TRUE
  steps[[i]] = step 
}  


fig |>
  layout(yaxis = list(range = c(-1,D + 1)),
         xaxis = list(range = c(-1,D + 1)),
         sliders = list(list(active = 3,
                             currentvalue = list(prefix = "x = "),
                             steps = steps)),
         shapes = list(list(type = "rect", fillcolor = "red", line = list(color = "red"), opacity = 0.2, y0 = 0, y1 = h_road, x0 = 0, x1 = D),
                       list(type = "rect", fillcolor = "blue", line = list(color = "blue"), opacity = 0.2, y0 = h_road, y1 = D, x0 = 0, x1 = D)),
         c)
```

Критерий оптимальности задается функцией $t(x)$, которую надо минимизировать, изменяя варьируемый параметр $х$. Остальные параметры задачи $(v,V,D,s,S)$ являются фиксированными. $$t(x) = \frac{\sqrt{x^2+S^2}}{V} + \frac{\sqrt{(D-x)^2+s^2}}{v}$$ $$\begin{cases}
      \min{t(x)} - ?\\
      \frac{dt}{dx}=0\\
      \frac{d^2t}{dx^2}>0
\end{cases}\,$$ $$t'(x)=\frac{x}{V \sqrt{S^2+x^2}}-\frac{d-x}{v \sqrt{(d-x)^2+s^2}}$$

График целевой функции $t(x)$

```{r}
#| message: false
#| warning: false
#| echo: false

x <- seq(0, D, length.out=100)
y <- sqrt(x^2+h_road^2)/v_road + sqrt((D-x)^2+h_sand^2)/v_sand
plot_ly(x=x, y=y, type = 'scatter', mode = 'lines')
```

График производной целевой функции $t'(x)$

```{r}
#| message: false
#| warning: false
#| echo: false

x <- seq(0, D, length.out=100)
y <- x/(v_road*sqrt(h_road^2+x^2)) - (D-x)/(v_sand*sqrt(h_sand^2+(D-x)^2))
plot_ly(x= x, y=y, type = 'scatter', mode = 'lines')
```

Следовательно оптимальное значение пути, пройденного по дороге $x = 65.64$

## Язык программирования R

### Задача 1

Упростите выражение:

``` r
c(sqrt(1), sqrt(2), sqrt(3))
```

Создайте последовательность 2 способами `(-1, -0.75, -0.5, …, 0.75, 1)`.

::: callout-note
оценка 1
:::

### Задача 2

Построить график кусочно-гладкой функции используя функцию [ifelse](https://rdrr.io/r/base/ifelse.html)

$$
f(x)=\begin{cases}
      x^2,\qquad x \leq -3\\
      x^3, \qquad -3 \leq x \leq 3\\
      2x+1, 3\leq x
\end{cases}\,
$$

::: callout-note
оценка 1
:::

### Задача 3

С помощью [ряда Лейбница](https://ru.wikipedia.org/wiki/%D0%A0%D1%8F%D0%B4_%D0%9B%D0%B5%D0%B9%D0%B1%D0%BD%D0%B8%D1%86%D0%B0) можно получить значение числа $\pi$ . Данный ряд сходится очень медленно.

$$
\pi =\sum_{i=0}^n{\frac{(-1)^i}{2i+1}}
$$

Использовав по максимуму векторные операции рассчитайте для различных $n$ от $n=10$ до $n=10^{10}$

1.  число $\pi$ и его ошибку
2.  постройте график ошибки от $n$

::: callout-note
оценка 1
:::

### Задача 4

Создать список содержащий буквы от `a` до `z`. Продемонстрировать использование операторов индексации @sec-basic-list-indexing.

::: callout-note
оценка 1
:::

### Задача 5

Создать список матриц размером `2x2` заполненных случайными целыми числами. Используя циклы получите:

1.  список с элементов `(2,2)` каждой матрицы.
2.  вектор состоящий из элементов `(1,1)`, `(1,2)` этих матриц.

::: callout-note
оценка 1
:::

### Задача 6

1.  создайте пятимерный массив и заполните его целыми числами.
2.  преобразуйте его как список массивов размерности 4.
3.  преобразуйте его как список списков массивов размерности 3.

::: callout-note
оценка 1
:::

## Линейная алгебра

### Здача 1

Решить СЛАУ $AX=b$ встроенным методом. Элементы матриц сгенерировать произвольно. [solve](https://rdrr.io/r/base/solve.html)

::: callout-note
оценка 1
:::

### Здача 2

Для произвольных матриц $A$ и $B$ заполненных случайными числами проверить следующие свойства:

1.  $(A+B)^T=A^T+B^T$
2.  $(AB)^T=B^TA^T$
3.  $\det{A}=\det{A^T}$
4.  $\det{AB}=\det{A}\det{B}$
5.  $\det{A^{-1}}=(\det{A})^{-1}$
6.  $(AB)^{-1}=B^{-1}A^{-1}$
7.  $(A-B)^{-1}=A^{-1}+A^{-1}B(A-B)^{-1}$

Рассмотрите функции [inverse](https://rdrr.io/cran/matlib/man/Inverse.html), [det](https://rdrr.io/r/base/det.html)

::: callout-note
оценка 1
:::

### Задача 3

Реализовать решение системы линейных уравнений методом гаусса жордана используя векторные операции.

::: callout-note
оценка 1
:::

## Исследование операций

### Задача 1

1.  Построить объемный и контурный графики функций $z = x^2 - y^2$ и $z = x^2 + y^2$.
2.  Графически определить минимум.
3.  К какому типу относятся кривые, изображенные на контурном графике.

::: callout-note
оценка 1
:::

### Задача 2

Найти максимальную скорость тела движущегося по закону

$$
s = 18t + 9t^2 - t^3
$$

1.  Построить график функции и её производной.
2.  Аналитически определить [максимум функции гл. @sec-nonlinear-unconstrained-one].
3.  Доказать, что данная точка является максимумом.

::: callout-note
оценка 1
:::

### Задача 3

Суточные расходы при плавании судна состоят из двух частей: постоянной, равной $а$, и переменной, возрастающий пропорционально кубу скорости. При какой скорости $v$ плавание судна окажется наиболее экономичным?

1.  определите целевую функцию
2.  аналитически определите максимум целевой функции
3.  постройте график целевой функции

::: callout-note
оценка 1
:::

### Задача 4

Имеется квадратный лист жести, сторона которого $а=60\ см$. Вырезая по всем его углам равные квадраты и загибая оставшуюся часть, нужно изготовить коробку без крышки. Каковы должны быть размеры вырезаемых квадратов, чтобы коробка имела наибольший объем?

![Раскройка листа жести](box.png)

1.  определите целевую функцию
2.  аналитически определите максимум целевой функции
3.  постройте график целевой функции

::: callout-note
оценка 1
:::

## Прикладная магия

Пусть дана функция общего вида $f(x,y)$ и система уравнений $Ax=b$ для двух переменных. Постройте контурный график функции, на котором изобразите точки пересечения прямых. Обработать случая параллельных прямых, совпадающих прямых.

::: callout-note
10 баллов
:::

::: callout-tip
Ещё 10 баллов. Дополнительно попробуйте использовать встроенный интерфейса формулы используя переменно число аргументов для функции. Считайте символ `~` эквивалентом символу `=`.

``` r
f(2*x+3*y~0, 2*x~3y+1)
```
:::

## Разбалловка

| Первичный балл | Итоговый балл |
|----------------|---------------|
| 0 – 10         | Не сдано      |
| 11 – 12        | 4             |
| 12 – 15        |               |

: Разбалловка
