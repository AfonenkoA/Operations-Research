# Язык разметки Markdown

диаграмма обработки markdown

Рабочие блокноты Quarto основаны на проекте Pandoc и используют язык разметки Мarkdown.

Markdown — это простой текстовый формат, который легко писать и, что еще более важно, легко читать:

> Документ в формате Markdown должен быть доступен для публикации как есть, как обычный текст, не создавая впечатление, будто он размечен тегами или инструкциями по форматированию. -- [John Gruber](https://daringfireball.net/projects/markdown/syntax#philosophy)

Рассмотрим наиболее часто встречаемые примитивы разметки

## Блоки кода

Quarto позволяет объеденить исполняемый код и сопутсвующее описание в готовый документ. Чтобы узнать больше о Quarto, посетите <https://quarto.org>. Блоки кода, которые используют фигурные скобки вокруг имени языка (например, ```` ```{r} ````), являются исполняемыми и будут запущены Quarto во время рендеринга

```` markdown
## Качество воздуха

@fig-airquality более подробно изучает влияние температуры на уровень озона.

```{{r}}
#| label: fig-airquality
#| fig-cap: "Температура и уровень озона."
#| warning: false

library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")
```
````

В результате получим следующее. @fig-airquality более подробно изучает влияние температуры на уровень озона.

```{r}
#| label: fig-airquality
#| fig-cap: "Температура и уровень озона."
#| warning: false

library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")
```

Из исполняемых блоков кода можно создавать самые разные типы выходных данных, включая графики, таблицы и простой текст.

### Встраиваемый код

Встраиваемый (Inline) код позволяет вам выполнять код в markdown, например, для автоматического использования самых последних вычислений в повествовании. Синтаксис встроенного кода похож на блоки кода, за исключением того, что используеся один тик (`` ` ``) вместо тройных тиков (```` ``` ````). Встраиваемый код может использоваться в середине markdown. Например, следующий код сохраняет переменную `radius` в блоке кода, а затем обращается к ней в предложении с помощью встроенного кода:

```` markdown
```{{r}}
radius <- 5
```

The radius of the circle is `{{r}} radius`
````

В результате получаем:

``` markdown
The radius of the circle is 5.
```

::: callout-caution
Встроенные выражения должны быть ограничены простыми значениями, которые предварительно вычисляются в обычных ячейках кода (а не вызовами функций, которые выполняют нетривиальную работу). Это связано с тем, что протокол, используемый для встроенных выражений, несовместим с библиотеками, использующими многопоточность.
:::

### Разные языки в одном документе

Движки рендеринга **Knitr** и **Jupyter** позволяют совмещать вычисления на разных языках в одном документе. Например:

```{r}
#| echo: fenced
#| cache: true
plot(pressure, pch=21, col='blue', bg='lightblue')
```

```{python}
#| echo: fenced
#| warning: false
#| message: false
#| error: false
#| cache: true

import matplotlib.pyplot as plt
import numpy as np

# Data for plotting
t = np.arange(0.0, 2.0, 0.01)
s = 1 + np.sin(2 * np.pi * t)

fig, ax = plt.subplots()
ax.plot(t, s)

ax.set(xlabel='time (s)', ylabel='voltage (mV)',
       title='About as simple as it gets, folks')
ax.grid()

fig.savefig("test.png")
plt.show()
```

```{julia}
#| echo: fenced
#| warning: false
#| message: false
#| error: false
#| cache: true

using Plots
x = range(0, 10, length=100);
y1 = sin.(x);
y2 = cos.(x);
plot(x, [y1 y2])
```

### Рендеринг и сохранение

При рендеринге документа Quarto блоки кода выполняются автоматически. Прямо над документом находится панель инструментов, содержащая различные параметры, включая **Render** (сегментированная синяя стрелка). По умолчанию документ qmd конвертируется в html.

### Опции блоков кода

Задать название блока можно с помощь параметра `label`:

```` markdown
```{{r}}
#| label: convert
airquality$TempC <- (5 / 9) * (airquality$Temp - 32)
```
````

Параметр `echo: false` отключает печать кода (отображается только вывод).

```` markdown
``` r
library(tidyverse)
library(palmerpenguins)
penguins |>
  mutate(
    bill_ratio = bill_depth_mm / bill_length_mm,
    bill_area  = bill_depth_mm * bill_length_mm
  )
```

Line 3  
Take `penguins`, and then,

Lines 4-7  
add new columns for the bill ratio and bill area.
````

### Параметры вывода

Существует широкий спектр опций для настройки вывода из выполненного кода. Все эти опции могут быть указаны либо глобально (в front-matter документа), либо для каждого блока кода. Например, вот модификация примера R, указывающая, что мы не хотим "отражать" код в выходном документе:

``` yaml
---
title: "My Document"
execute:
  echo: false
---
```

Параметр `echo` может быть переопределен для конкретно блока кода. Например:

```{{r}}
#| echo: true

plot(cars)
```

Параметры блока кода включены в специальный комментарий в верхней части блока (строки в верхней части, начинающиеся с `#|`, считаются параметрами).

Наиболее распространенные параметры приведены далее:

+-----------+------------------------------------------------------------------------------------------------------------------+
| Option    | Description                                                                                                      |
+===========+==================================================================================================================+
| `eval`    | Вычислить блок (если `false`, то блок кода просто дублируется в вывод).                                          |
+-----------+------------------------------------------------------------------------------------------------------------------+
| `echo`    | Включить исходный код в вывод                                                                                    |
+-----------+------------------------------------------------------------------------------------------------------------------+
| `output`  | Включить результаты выполнения кода в выходные данные (`true`, `false`)                                          |
|           |                                                                                                                  |
|           | `asis`, чтобы указать, что выходные данные представляют собой markdown и не должны содержать расширений Quarto). |
+-----------+------------------------------------------------------------------------------------------------------------------+
| `warning` | Включать предупреждения в вывод                                                                                  |
+-----------+------------------------------------------------------------------------------------------------------------------+
| `error`   | Включать ошибки в вывод (это подразумевает, что ошибки выполнения кода не остановят обработку документа).        |
+-----------+------------------------------------------------------------------------------------------------------------------+

Пример Knitr с некоторыми из этих дополнительных параметров:

````         
---
title: "Knitr Document"
execute:
  echo: false
---

```{{r}}
#| warning: false

library(ggplot2)
ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess", se = FALSE)
```

```{{r}}
summary(airquality)
```
````

### Названия рисунков

Можно указать подпись и замещающий текст для рисунков, сгенерированных из кода, используя параметры `fig-cap` и `fig-alt`. Например, здесь эти параметры добавлются в ячейку кода которая создает график:

```{python}
#| echo: fenced
#| fig-cap: "График в полярных координатах"
#| fig-alt: "График линии в полярных координатах"
#| cache: true

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

## Форматирование текста

+-------------------------------------------+-------------------------------------------+
| Язык разметки Markdown                    | Результат                                 |
+===========================================+===========================================+
| ``` markdown                              | *курсив*, **жирный**, ***жирный курсив*** |
| *курсив*, **жирный**, ***жирный курсив*** |                                           |
| ```                                       |                                           |
+-------------------------------------------+-------------------------------------------+
| ``` markdown                              | верхний индекс^2^ / нижний индекс~2~      |
| верхний индекс^2^ / subscript~2~          |                                           |
| ```                                       |                                           |
+-------------------------------------------+-------------------------------------------+
| ``` markdown                              | ~~зачёркутый~~                            |
| ~~зачёркнутый~~                           |                                           |
| ```                                       |                                           |
+-------------------------------------------+-------------------------------------------+

## Заголовки

+------------------------+--------------------+
| Язык разметки Markdown | Результат          |
+========================+====================+
| ``` markdown           | ## Заголовок 2     |
| ## Заголовок 2         |                    |
| ```                    |                    |
+------------------------+--------------------+
| ``` markdown           | ### Заголовок 3    |
| ### Заголовок 3        |                    |
| ```                    |                    |
+------------------------+--------------------+
| ``` markdown           | #### Заголовок 4   |
| #### Заголовок 4       |                    |
| ```                    |                    |
+------------------------+--------------------+
| ``` markdown           | ##### Заголовок 5  |
| ##### Заголовок 5      |                    |
| ```                    |                    |
+------------------------+--------------------+
| ``` markdown           | ###### Заголовок 6 |
| ###### Заголовок 6     |                    |
| ```                    |                    |
+------------------------+--------------------+

: Заголовки

## Ссылки и Изображения

+----------------------------------------------------------+-----------------------------------------------------------------+
| Язык разметки Markdown                                   | Результат                                                       |
+==========================================================+=================================================================+
| ``` markdown                                             | <https://rct.bsu.by>                                            |
| <https://rct.bsu.by>                                     |                                                                 |
| ```                                                      |                                                                 |
+----------------------------------------------------------+-----------------------------------------------------------------+
| ``` markdown                                             | [Наш факультет](https://bsu.by)                                 |
| [Название](https://rct.bsu.by)                           |                                                                 |
| ```                                                      |                                                                 |
+----------------------------------------------------------+-----------------------------------------------------------------+
| ``` markdown                                             | ![Наш факультет](rctbsu.png){width="100"}                       |
| ![Название](rctbsu.png)                                  |                                                                 |
| ```                                                      |                                                                 |
+----------------------------------------------------------+-----------------------------------------------------------------+
| ``` markdown                                             | [![Наш факультет](rctbsu.png){width="100"}](https://rct.bsu.by) |
| [![Название](rctbsu.png)](https://rct.bsu.by)            |                                                                 |
| ```                                                      |                                                                 |
|                                                          |                                                                 |
| Картинка становится кликабельной при подстановке в html. |                                                                 |
+----------------------------------------------------------+-----------------------------------------------------------------+

## Перекрестные ссылки

Перекрестные ссылки на рисунки создаются, добавлением к ним идентификатора с префиксом `fig-`, а затем ссылаясь на рисунок с помощью префикса `@`. Например:

``` markdown
![Грач](rctbsu.png){#fig-grach}

Как показано на рисунке @fig-grach.
```

Для рисунков, созданных блоками исполняемого кода, используется `label` с префиксом `fig-`, чтобы сделать их перекрестно-ссылочными. Например:

```` markdown
Для демонстрации графика линии используется @fig-cars-plot.

```{{r}}
#| label: fig-cars-plot
#| fig-cap: "Cars plot "

plot(cars)
```
````

Для демонстрации графика линии используется @fig-cars-plot.

```{r}
#| echo: fenced
#| label: fig-cars-plot
#| fig-cap: "Cars plot "
#| cache: true

plot(cars)
```

### Размещение и подзаголовки рисунков

Подзаголовки для вычисляемых рисунков задаются с использованием опций `fig-cap` и `fig-subcap`. Если использовать параметр `label` с префиксом `fig-` то рисунок будет пронумерован и \[перекрестно-ссылаемым\].

```{r}
#| echo: fenced
#| label: fig-charts
#| fig-cap: "Charts"
#| fig-subcap: 
#|   - "Cars"
#|   - "Pressure"
#| layout-ncol: 2
#| cache: true

plot(cars)
plot(pressure)
```

::: callout-note
Рисунки будут размещены в две колонки только при конвертации в `html`
:::

## Списки

+--------------------------------+-------------------------------+
| Язык разметки Markdown         | Output                        |
+================================+===============================+
| ``` markdown                   | -   маркированный список      |
| * маркированный список         |     -   пункт 1               |
|     + пункт 1                  |     -   пункт 2               |
|     + пункт 2                  |         -   подпункт 1        |
|         - подпункт 1           |                               |
| ```                            |                               |
+--------------------------------+-------------------------------+
| ``` markdown                   | 1.  ordered list              |
| 1. нумерованный список         | 2.  item 2                    |
| 2. пункт 2                     |     i)  sub-item 1            |
|     i) подпункт 1              |         A.  sub-sub-item 1    |
|          A.  вложение 1        |                               |
| ```                            |                               |
+--------------------------------+-------------------------------+
| ``` markdown                   | -   [ ] Задача 1              |
| - [ ] Задача 1                 | -   [x] Задача 2              |
| - [x] Задача 2                 |                               |
| ```                            |                               |
+--------------------------------+-------------------------------+
| ``` markdown                   | (1) Сквозная нумерация списка |
| (@)  Сквозная нумерация списка |                               |
|                                | продолжается после            |
| продолжается после             |                               |
|                                | (2) прерывания                |
| (@)  прерывания                |                               |
| ```                            |                               |
+--------------------------------+-------------------------------+
| ``` markdown                   | термин                        |
| термин                         |                               |
| : его определение              | :   его определение           |
| ```                            |                               |
+--------------------------------+-------------------------------+

### Блочное размещение

Например, например мы можем разместиить 2 списка рядом:

``` markdown
::: {layout-ncol=2}
### List One

- Item A
- Item B
- Item C

### List Two

- Item X
- Item Y
- Item Z
:::
```

::: {layout-ncol="2"}
#### Первый списко

-   Элемент A
-   Элемент B
-   Элемент C

#### Второй список

-   Элемент X
-   Элемент Y
-   Элемент Z
:::

::: callout-note
Списки будут размещены в две колонки только при конвертации в `html`
:::

## Таблицы

### Простые таблицы

В обычных таблицах могут содержаться только элементы представленные простым текстом.

#### Разметка Markdown

Выравнивание по

``` markdown
| Правому краю | Левому краю | Умолчанию | Центру |
|-------------:|:------------|-----------|:------:|
|           12 | 12          | 12        |   12   |
|          123 | 123         | 123       |  123   |
|            1 | 1           | 1         |   1    |
```

#### Результат

Выравнивание по

| Правому краю | Левому краю | Умолчанию | Центру |
|-------------:|:------------|-----------|:------:|
|           12 | 12          | 12        |   12   |
|          123 | 123         | 123       |  123   |
|            1 | 1           | 1         |   1    |

### Расширенные таблицы

Расширенные таблицы (grid tables) — это более продвинутый тип таблиц разметки, которые допускают произвольные блочные элементы (несколько абзацев, блоков кода, списков и т. д.). Например: строка =s отделяет заголовок от тела таблицы и может быть опущена для таблицы без заголовка. Ячейки таблиц сетки могут содержать произвольные блочные элементы (несколько абзацев, блоков кода, списков и т. д.)

Выравнивания можно указывать так же, как и в случае с таблицами конвейера, помещая двоеточия на границах разделительной линии после заголовка.

#### Разметка Markdown

``` markdown
+-----------+-----------+--------------------+
| Fruit     | Price     | Advantages         |
+===========+===========+====================+
| Bananas   | $1.34     | - built-in wrapper |
|           |           | - bright color     |
+-----------+-----------+--------------------+
| Oranges   | $2.10     | - cures scurvy     |
|           |           | - tasty            |
+-----------+-----------+--------------------+

: Пример расширенной таблицы
```

#### Результат

+--------------+--------------+----------------------+
| Fruit        | Price        | Advantages           |
+==============+==============+======================+
| Bananas      | \$1.34       | -   built-in wrapper |
|              |              | -   bright color     |
+--------------+--------------+----------------------+
| Oranges      | \$2.10       | -   cures scurvy     |
|              |              | -   tasty            |
+--------------+--------------+----------------------+

: Пример расширенной таблицы

## Формулы

Для вставки формулы в текст используется `$`. Для выделения отдельным блоком используется `$$`. Например:

+--------------------------------+------------------------------+
| Язык разметки Markdown         | Результат                    |
+================================+==============================+
| ``` markdown                   | формула в тексте: $E=mc^{2}$ |
| формула в тексте: $E = mc^{2}$ |                              |
| ```                            |                              |
+--------------------------------+------------------------------+
| ``` markdown                   | отдельный блок формул:       |
| отдельный блок формул:         |                              |
|                                | $$E = mc^{2}$$               |
| $$E = mc^{2}$$                 |                              |
| ```                            |                              |
+--------------------------------+------------------------------+

: Формулы

Перекрёстная ссылка на LaTeX

## Диаграммы

Quarto имеет встроенную поддержку для диаграмм [Mermaid](https://mermaid-js.github.io/mermaid/#/) и [Graphviz](https://graphviz.org/). Mermaid -- это инструмент для создания диаграмм и графиков на основе Javascript, который использует определения текста, вдохновленные Markdown, и рендерер для создания и изменения сложных диаграмм.

```{mermaid}
%%| echo: fenced
flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
  C --> D[Result one]
  C --> E[Result two]
```

## Цитаты

``` markdown
 > Blockquote
```

> Это короткая цитата

## Специальные символы

+-----------------+---------------+
| Markdown Syntax | Output        |
+=================+===============+
| ``` markdown    | endash: --    |
| endash: --      |               |
| ```             |               |
+-----------------+---------------+
| ``` markdown    | emdash: ---   |
| emdash: ---     |               |
| ```             |               |
+-----------------+---------------+

::: callout-note
Символы подставляются только при конвертации в `html`
:::
