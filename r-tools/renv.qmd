# Система управления пакетами renv {#sec-r-tools-renv}

[Renv](https://rstudio.github.io/renv/index.html) расшифровывается как Reproducible Environment. Эта библиотека позволяет автоматизировать управление пакетами и их зависимостями. @bib-r-tools-renv-introduction

## Терминология {#sec-r-tools-renv-defenitions}

::: {#def-r-lang-library}

Библиотека (library)

:   это каталог, содержащий установленные пакеты (packages). Следующий код загружает пакет `{{r}} library(dplyr)`, из библиотеки общей для всей системы. Текущие библиотеки можно посмотреть с помощью функции [`.libPaths()`](https://rdrr.io/r/base/libPaths.html) . Доступные пакеты можно узнать с помощью команды `{{r}} lapply(.libPaths(), list.files)` или через вкладку `Packeges` в RStudio.
:::

::: {#def-r-lang-packages}

Репозиторий

:   это источник пакетов; [`install.packages()`](https://rdrr.io/r/utils/install.packages.html) загружает пакет из репозитория и помещает его в библиотеку (каталог компьютере). Наиболее важным репозиторием является [CRAN](https://cran.r-project.org/); Другие свободно доступные репозитории включают [Bioconductor](https://www.bioconductor.org/packages/release/BiocViews.html#___Software), [Posit Public Package Manager](https://packagemanager.posit.co/client/#/) и [R Universe](https://r-universe.dev/search). Узнать какие репозитории активны в текущем сеансе можно с помощью команды `{{r}} getOption('repos')`
:::

## Проект {#sec-r-tools-renv-project}

### Инициализация {#sec-r-tools-renv-project-init}

Проект инициализируется с [`renv::init()`](https://rdrr.io/github/rstudio/renv/man/init.html). Эта команда добавляет в проект три новых файла и директории:

1.  Библиотека проекта, `renv/library`, содержащая все пакеты, которые в данный момент используются проекте. Renv инициализирует библиотеку для кажого проекта гаранитируя изоляцию проектов друг от друга. Разные проекты могут использовать разные версии пакетов, а установка, обновление или удаление пакетов в одном проекте не влияет на другие проекты.
2.  Файл блокировки `renv.lock` в который записываются метаданные об установленных пакетах.
3.  Профиль проекта R, `.Rprofile`. Этот файл запускается автоматически при каждом запуске интерпретатора R (в данном проекте) и позволяет renv настроить пути к пакетам .

### Сохранение состояния {#sec-r-tools-renv-project-snapshot}

Для сохранения состояния текущего проекта выполняется команда [`renv::snapshot()`](https://rdrr.io/github/rstudio/renv/man/snapshot.html), которая записывает метаданные пакетов в файл `renv.lock`.

### Восстановление {#sec-r-tools-renv-project-restore}

Для того, чтобы восстановить пакеты из другого проекта (например размещённого на github) требуется 4 файла:

```{.console code-line-numbers="true"}          
renv.lock
.Rprofile
renv/activate.R
renv/settings.json
```

После сохранения этих файлов в каталоге проекта для восстановления пакетов выполняется команда [`renv::restore()`](https://rdrr.io/github/rstudio/renv/man/restore.html)

### Установка пакетов {#sec-r-tools-renv-project-install}

Установка пакетов возможна стандартным способом [`install.packages()`](https://rdrr.io/r/utils/install.packages.html) или с помощью [`renv::install()`](https://rdrr.io/cran/renv/man/install.html).

### Обновление пакетов {#sec-r-tools-renv-project-update}

Обновление пакетов производится вызовом [`renv::update()`](https://rdrr.io/cran/renv/man/update.html). После обновления необходимо сохранить изменения @sec-r-tools-renv-project-snapshot.

## Инфраструктура {#sec-r-tools-renv-project-infrastructure}

Файл блокировки всегда называется `renv.lock` и представляет собой json-файл, в котором записана вся информация, необходимая для воссоздания проекта. Пример файла блокировки с пакетом markdown, установленным из CRAN, и пакетом mime, установленным с GitHub:

``` json
{
  "R": {
    "Version": "4.4.2",
    "Repositories": [
      {
        "Name": "CRAN",
        "URL": "https://cloud.r-project.org"
      }
    ]
  },
  "Packages": {
    "markdown": {
      "Package": "markdown",
      "Version": "1.0",
      "Source": "Repository",
      "Repository": "CRAN",
      "Hash": "4584a57f565dd7987d59dda3a02cfb41"
    },
    "mime": {
      "Package": "mime",
      "Version": "0.12.1",
      "Source": "GitHub",
      "RemoteType": "github",
      "RemoteHost": "api.github.com",
      "RemoteUsername": "yihui",
      "RemoteRepo": "mime",
      "RemoteRef": "main",
      "RemoteSha": "1763e0dcb72fb58d97bab97bb834fc71f1e012bc",
      "Requirements": [
        "tools"
      ],
      "Hash": "c2772b6269924dad6784aaa1d99dbb86"
    }
  }
}
```
